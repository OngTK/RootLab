<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
  정규화 DTO만 사용하고, 원본DTO는 생성하지 않습니다.
  SELECT 시 원본 컬럼을 정규화 DTO의 필드명으로 AS 별칭을 맞춰 반환합니다.
  @author OngTK
-->
<mapper namespace="rootLab.model.mapper.SyncMapper">

    <!-- [1] 카테고리 코드 동기화========================================================= -->
    <insert id="insertCategoryCodeFromOrigin">
        INSERT INTO k_tour_headquarter.categorycode ( rnum, lclsSystm1Cd, lclsSystm1Nm, lclsSystm2Cd, lclsSystm2Nm, lclsSystm3Cd, lclsSystm3Nm )
            SELECT rnum, lclsSystm1Cd, lclsSystm1Nm, lclsSystm2Cd, lclsSystm2Nm, lclsSystm3Cd, lclsSystm3Nm
            FROM tour_api_origin.lclssystmcode2;
    </insert>

    <!-- [2] 법정동 코드 동기화========================================================= -->
    <insert id="insertLDongCodeFromOrigin">
        INSERT INTO k_tour_headquarter.ldongcode ( rnum, lDongRegnCd, lDongRegnNm, lDongSignguCd, lDongSignguNm, mapy, mapx )
            SELECT rnum, lDongRegnCd, lDongRegnNm, lDongSignguCd, lDongSignguNm, 0.0, 0.0
            FROM tour_api_origin.ldongcode2;
    </insert>

    <!-- [3] 관광정보 동기화 목록 동기화 ========================================================= -->
    <insert id="insertPlaceInfoFromOrigin">
        INSERT INTO k_tour_headquarter.placeinfo (ctNo, ldNo, ccNo, isEditable, contentid, title, showflag, firstimage, firstimage2, addr1, addr2, zipcode, homepage, tel, telname, overview, createdAt, updatedAt)
            SELECT
                /* FK: contentType.ctNo */
                ( SELECT ct.ctNo
                  FROM k_tour_headquarter.contentType ct
                  WHERE ct.contenttypeID = TRIM(al.contenttypeid)
                    LIMIT 1 ) AS ctNo,

                /* FK: ldongCode.ldNo (법정동: lDongRegnCd + lDongSignguCd) */
                ( SELECT ld.ldNo
                FROM k_tour_headquarter.ldongCode ld
                WHERE ld.lDongRegnCd = TRIM(al.lDongRegnCd)
                AND ld.lDongSignguCd= TRIM(al.lDongSignguCd)
                LIMIT 1 ) AS ldNo,

                /* FK: categoryCode.ccNo (al.lclsSystm3 기준 매칭) */
                ( SELECT cc.ccNo
                FROM k_tour_headquarter.categoryCode cc
                WHERE cc.lclsSystm3Cd =
                UPPER(TRIM(REPLACE(REPLACE(REPLACE(REPLACE(
                al.lclsSystm3, CHAR(13), ''), CHAR(10), ''), CHAR(9), ''), ' ', '')))
                LIMIT 1 ) AS ccNo,

                TRUE AS isEditable,
                CAST(al.contentid AS UNSIGNED) AS contentid,
                LEFT(TRIM(al.title), 50) AS title,
                al.showflag AS showflag,
                NULLIF(TRIM(al.firstimage), '') AS firstimage,
                NULLIF(TRIM(al.firstimage2), '') AS firstimage2,
                COALESCE(NULLIF(TRIM(al.addr1), ''), '-') AS addr1,
                NULLIF(TRIM(al.addr2), '') AS addr2,
                NULLIF(TRIM(al.zipcode), '') AS zipcode,

                /* 부가정보: dc가 있으면 채움, 없으면 NULL */
                NULLIF(TRIM(dc.homepage), '') AS homepage,
                LEFT(NULLIF(TRIM(al.tel), ''), 10) AS tel,
                NULLIF(TRIM(dc.telname), '') AS telname,
                NULLIF(dc.overview, '') AS overview,

                /* [] createdAt, updatedAt을 DATETIME 형식으로 변환 */
                STR_TO_DATE(al.createdtime, '%Y%m%d%H%i%s') AS createdAt,
                STR_TO_DATE(al.modifiedtime, '%Y%m%d%H%i%s') AS updatedAt

            FROM tour_api_origin.areabasedsynclist2 al
            LEFT JOIN tour_api_origin.detailcommon2 dc
            ON CAST(TRIM(al.contentid) AS UNSIGNED) = CAST(TRIM(dc.contentid) AS UNSIGNED);
    </insert>

    <!-- [4] 지도마커GPS 동기화 ========================================================= -->
    <insert id="insertMarkersGPSFromOrigin">
        INSERT INTO k_tour_headquarter.markersgps (pNo, mapx, mapy)
            SELECT kpi.pNo pNo, joinA.mapx mapx, joinA.mapy mapy
                FROM k_tour_headquarter.placeinfo kpi
                JOIN (SELECT tabsl.contentid contentid, tdc.mapx mapx, tdc.mapy mapy
                      FROM tour_api_origin.areabasedsynclist2 tabsl
                      JOIN tour_api_origin.detailcommon2 tdc
                      USING (contentid)) joinA
                USING (contentid);
    </insert>

    <!-- [5] Place상세이미지 동기화 ========================================================= -->
    <insert id="insertPlaceImageDetailFromOrigin">
        INSERT INTO k_tour_headquarter.placeimagedetail (pNo, serialnum, originimgurl, smallimageurl, imgname)
            SELECT kpi.pNo pNo, tdi.serialnum serialnum, tdi.originimgurl originimgurl, tdi.smallimageurl smallimageurl, tdi.imgname imgname
                FROM k_tour_headquarter.placeinfo kpi
                JOIN tour_api_origin.detailimage2 tdi
                USING (contentid);
    </insert>
</mapper>
