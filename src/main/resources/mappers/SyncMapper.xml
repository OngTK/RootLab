<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
  정규화 DTO만 사용하고, 원본DTO는 생성하지 않습니다.
  SELECT 시 원본 컬럼을 정규화 DTO의 필드명으로 AS 별칭을 맞춰 반환합니다.
  @author OngTK
-->
<mapper namespace="rootLab.model.mapper.SyncMapper">

    <!-- [1] 카테고리 코드 동기화========================================================= -->
    <!-- [1.1] 카테고리 결과를 반환할 Map 정의 -->
    <resultMap id="CategoryCodeMap" type="rootLab.model.dto.CategoryCodeDto">
        <id property="ccNo" column="ccNo"/>
        <result property="rnum" column="rnum"/>
        <result property="lclsSystm1Cd" column="lclsSystm1Cd"/>
        <result property="lclsSystm1Nm" column="lclsSystm1Nm"/>
        <result property="lclsSystm2Cd" column="lclsSystm2Cd"/>
        <result property="lclsSystm2Nm" column="lclsSystm2Nm"/>
        <result property="lclsSystm3Cd" column="lclsSystm3Cd"/>
        <result property="lclsSystm3Nm" column="lclsSystm3Nm"/>
        <result property="isActivate" column="isActivate"/>
        <result property="createdAt" column="createdAt"/>
        <result property="updatedAt" column="updatedAt"/>
    </resultMap>

    <!-- [1.2] API 원본 DB를 정규화 DTO 형식에 맞추어 조회 -->
    <select id="selectCategoryCodesFromOrigin" resultMap="CategoryCodeMap">
        SELECT
        NULL AS ccNo,
        CAST(rnum AS UNSIGNED) AS rnum,
        lclsSystm1Cd AS lclsSystm1Cd,
        lclsSystm1Nm AS lclsSystm1Nm,
        lclsSystm2Cd AS lclsSystm2Cd,
        lclsSystm2Nm AS lclsSystm2Nm,
        lclsSystm3Cd AS lclsSystm3Cd,
        lclsSystm3Nm AS lclsSystm3Nm,
        TRUE AS isActivate,
        NULL AS createdAt,
        NULL AS updatedAt
        FROM tour_api_origin.lclsSystmCode2;
    </select>

    <!-- [1.3] 정규화 DB에 INSERT -->
    <insert id="insertCategoryCodeBatch">
        INSERT INTO k_tour_headquarter.categoryCode
        (rnum, lclsSystm1Cd, lclsSystm1Nm, lclsSystm2Cd, lclsSystm2Nm,
        lclsSystm3Cd, lclsSystm3Nm, isActivate)
        VALUES
        <foreach collection="list" item="it" separator=",">
            (#{it.rnum}, #{it.lclsSystm1Cd}, #{it.lclsSystm1Nm},
            #{it.lclsSystm2Cd}, #{it.lclsSystm2Nm},
            #{it.lclsSystm3Cd}, #{it.lclsSystm3Nm}, #{it.isActivate})
        </foreach>
    </insert>

    <!-- [2] 법정동 코드 동기화========================================================= -->
    <!-- [2.1] 카테고리 결과를 반환할 Map 정의 -->
    <resultMap id="LDongCodeMap" type="rootLab.model.dto.LDongCodeDto">
        <id property="IdNo" column="ldNo"/>
        <result property="rnum" column="rnum"/>
        <result property="lDongRegnCd" column="lDongRegnCd"/>
        <result property="lDongRegnNm" column="lDongRegnNm"/>
        <result property="lDongSignguCd" column="lDongSignguCd"/>
        <result property="lDongSignguNm" column="lDongSignguNm"/>
        <result property="isActivate" column="isActivate"/>
        <result property="mapy" column="mapy"/>
        <result property="mapx" column="mapx"/>
        <result property="createdAt" column="createdAt"/>
        <result property="updatedAt" column="updatedAt"/>
    </resultMap>

    <!-- [2.2] 원본 API DB에서 정규화 테이블 DTO에 맞추어 조회 -->
    <!--
      주의: 원본 ldongCode2 에는 mapy/mapx 가 없음
      아래 쿼리는 임시로 0.0 세팅 (추후 교체 예정)
    -->
    <select id="selectLDongCodesFromOrigin" resultMap="LDongCodeMap">
        SELECT
        NULL AS ldNo, -- AI
        CAST(rnum AS UNSIGNED) AS rnum,
        lDongRegnCd AS lDongRegnCd,
        lDongRegnNm AS lDongRegnNm,
        lDongSignguCd AS lDongSignguCd,
        lDongSignguNm AS lDongSignguNm,
        TRUE AS isActivate,
        CAST(0.0 AS DECIMAL(13,10)) AS mapy, -- TODO: 좌표 공급 필요
        CAST(0.0 AS DECIMAL(13,10)) AS mapx, -- TODO: 좌표 공급 필요
        NULL AS createdAt,
        NULL AS updatedAt
        FROM tour_api_origin.ldongCode2
    </select>

    <!-- [2.3] 정규화 테이블에 삽입 -->
    <insert id="insertLDongCodeBatch">
        INSERT INTO k_tour_headquarter.ldongCode
        (rnum, lDongRegnCd, lDongRegnNm, lDongSignguCd, lDongSignguNm,
        isActivate, mapy, mapx)
        VALUES
        <foreach collection="list" item="it" separator=",">
            (#{it.rnum}, #{it.lDongRegnCd}, #{it.lDongRegnNm}, #{it.lDongSignguCd}, #{it.lDongSignguNm},
            #{it.isActivate}, #{it.mapy}, #{it.mapx})
        </foreach>
    </insert>

    <!-- [3] 관광정보 동기화 목록 동기화 ========================================================= -->
    <!-- [3.1] 관광정보 결과를 반환할 Map 정의 -->
    <resultMap id="PlaceInfoMap" type="rootLab.model.dto.PlaceInfoDto">
        <id     property="pNo"         column="pNo"/>
        <result property="ctNo"        column="ctNo"/>      <!-- FK: contentType.ctNo -->
        <result property="gpsNo"       column="gpsNo"/>     <!-- FK: ldongCode.ldNo -->
        <result property="cd3No"       column="cd3No"/>     <!-- FK: categoryCode.ccNo -->
        <result property="isEditable"  column="isEditable"/>
        <result property="contentid"   column="contentid"/>
        <result property="title"       column="title"/>
        <result property="showflag"    column="showflag"/>
        <result property="firstimage"  column="firstimage"/>
        <result property="firstimage2" column="firstimage2"/>
        <result property="addr1"       column="addr1"/>
        <result property="addr2"       column="addr2"/>
        <result property="zipcode"     column="zipcode"/>
        <result property="homepage"    column="homepage"/>
        <result property="tel"         column="tel"/>
        <result property="telname"     column="telname"/>
        <result property="overview"    column="overview"/>
        <result property="createdAt"   column="createdAt"/>
        <result property="updatedAt"   column="updatedAt"/>
    </resultMap>

    <!-- [3.2] 원본 API DB에서 정규화 테이블 DTO에 맞추어 조회
      - 원본: detailCommon2(dc) + areabasedsynclist2(ab) 를 contentid 로 JOIN
      - 매핑: contentType / ldongCode / categoryCode (본사 DB)
    -->
    <select id="selectPlaceInfoFromOrigin" resultMap="PlaceInfoMap">
        SELECT
        NULL AS pNo,

        /* [1] ctNo: contenttypeid → contentType.ctNo
        - dc.contenttypeid가 없으면 al.contenttypeid 사용 */
        (
        SELECT ct.ctNo
        FROM k_tour_headquarter.contentType ct
        WHERE ct.contenttypeID = TRIM(COALESCE(dc.contenttypeid, al.contenttypeid))
        LIMIT 1
        ) AS ctNo,

        /* [2] gpsNo: (lDongRegnCd lDongSignguCd가 모두 일치할 때) → ldongCode.ldNo
        - dc 쪽 값이 없으면 al 값 사용 */
        (
        SELECT ld.ldNo
        FROM k_tour_headquarter.ldongCode ld
        WHERE ld.lDongRegnCd   = TRIM(COALESCE(dc.lDongRegnCd,   al.lDongRegnCd))
        AND ld.lDongSignguCd = TRIM(COALESCE(dc.lDongSignguCd, al.lDongSignguCd))
        LIMIT 1
        ) AS gpsNo,

        /* [3] cd3No: lclsSystm3 → categoryCode.ccNo
        - 대소문자/공백 보정, dc 없으면 al 값 사용 */
        (
        SELECT cc.ccNo
        FROM k_tour_headquarter.categoryCode cc
        WHERE cc.lclsSystm3Cd = UPPER(TRIM(COALESCE(dc.lclsSystm3, al.lclsSystm3)))
        LIMIT 1
        ) AS cd3No,

        /* [4] 그 외 기본/표시 컬럼 */
        TRUE                               AS isEditable,
        CAST(al.contentid AS UNSIGNED)     AS contentid,
        LEFT(TRIM(COALESCE(dc.title, al.title)), 50) AS title,

        /* areabasedsync에 showflag가 있으면 사용, 없으면 0 */
        COALESCE(al.showflag, 0)           AS showflag,

        /* 시간 컬럼은 DB default/trigger에 맡기므로 NULL로 */
        NULL                               AS createdAt,
        NULL                               AS updatedAt,

        /* 이미지/주소/연락처 등: al 기준, dc 보조(필요시) */
        NULLIF(TRIM(al.firstimage),  '')   AS firstimage,
        NULLIF(TRIM(al.firstimage2), '')   AS firstimage2,
        COALESCE(NULLIF(TRIM(al.addr1), ''), '-') AS addr1,
        NULLIF(TRIM(al.addr2), '')         AS addr2,
        NULLIF(TRIM(al.zipcode), '')       AS zipcode,

        /* dc 전용 컬럼(요청하신 조인 결과에 포함): homepage/telname/overview */
        NULLIF(TRIM(dc.homepage), '')      AS homepage,
        LEFT(NULLIF(TRIM(al.tel), ''), 10) AS tel,
        NULLIF(TRIM(dc.telname), '')       AS telname,
        COALESCE(NULLIF(TRIM(dc.overview), ''), '') AS overview

        FROM tour_api_origin.areabasedsynclist2 al
        LEFT JOIN tour_api_origin.detailCommon2 dc
        ON TRIM(al.contentid) = TRIM(dc.contentid);
    </select>

    <!-- [3.3] 정규화 테이블에 삽입 -->
    <insert id="insertPlaceInfoBatch">
        INSERT INTO k_tour_headquarter.placeInfo
        (ctNo, gpsNo, cd3No, isEditable, contentid, title, showflag,
        firstimage, firstimage2, addr1, addr2, zipcode, homepage, tel, telname, overview)
        VALUES
        <foreach collection="list" item="it" separator=",">
            (#{it.ctNo}, #{it.gpsNo}, #{it.cd3No}, #{it.isEditable},
            #{it.contentid}, #{it.title}, #{it.showflag},
            #{it.firstimage}, #{it.firstimage2}, #{it.addr1}, #{it.addr2},
            #{it.zipcode}, #{it.homepage}, #{it.tel}, #{it.telname}, #{it.overview})
        </foreach>
    </insert>


</mapper>
